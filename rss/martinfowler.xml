<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>马丁·福勒</title>
    <link>https://martinfowler.com</link>
    <description>来自 martinfowler.com 的主要新闻和更新信息</description>
    <lastBuildDate>Wed, 22 Jan 2025 18:03:22 GMT</lastBuildDate>
    <item>
      <title>使用适应度函数管理数据产品</title>
      <link>https://martinfowler.com/articles/fitness-functions-data-products.html</link>
      <description><![CDATA[
去中心化数据管理需要自动化才能有效扩展治理。适应度函数是一种强大的自动化治理技术，我的同事已将其应用于数据网格环境中的数据产品。由于数据产品是数据战略的基础构建块，因此确保围绕它们的强大治理可以大大增加成功的机会。 Kiran Prakash 解释了如何做到这一点，从对关键架构特征的简单测试开始，然后利用元数据和大型语言模型。
更多…]]></description>
      <guid>https://martinfowler.com/articles/fitness-functions-data-products.html</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:22 GMT</pubDate>
    </item>
    <item>
      <title>Bliki：周期时间</title>
      <link>https://martinfowler.com/bliki/CycleTime.html</link>
      <description><![CDATA[]]></description>
      <guid>https://martinfowler.com/bliki/CycleTime.html</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:22 GMT</pubDate>
    </item>
    <item>
      <title>使用 GenAI 从遗留系统中提取低级细节和高级解释</title>
      <link>https://martinfowler.com/articles/legacy-modernization-gen-ai.html#ReverseEngineeringDrawingOutLow-levelRequirements</link>
      <description><![CDATA[
Alessio Ferri、Tom Coggrave 和
Shodhan Sheth 使用 AST 驱动的
知识图谱和 LLM 来了解遗留系统。他们发现它既可以帮助他们提取代码的低级细节，又可以提供高级解释来支持以人为本的方法，例如事件风暴。
更多…]]></description>
      <guid>https://martinfowler.com/articles/legacy-modernization-gen-ai.html#ReverseEngineeringDrawingOutLow-levelRequirements</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:21 GMT</pubDate>
    </item>
    <item>
      <title>传统现代化与 GenAI 的结合</title>
      <link>https://martinfowler.com/articles/legacy-modernization-gen-ai.html</link>
      <description><![CDATA[
 关于 GenAI 对软件开发的影响，大部分讨论都是关于它编写（混乱）代码的能力。但我们中的许多人认为，作为现代化努力的一部分，它将更有用地帮助我们理解现有的混乱代码。我的同事 Alessio
Ferri、Tom Coggrave 和 Shodhan
Sheth 一直在考虑 GenAI 如何做到这一点，
包括构建一个内部工具来帮助探索各种可能性。
该工具使用 LLM 来增强基于代码库 AST 的知识图谱。它还使用 LLM 来帮助用户查询此知识图谱。

更多…]]></description>
      <guid>https://martinfowler.com/articles/legacy-modernization-gen-ai.html</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:21 GMT</pubDate>
    </item>
    <item>
      <title>接受 Book Overflow 播客关于重构的采访</title>
      <link>https://www.youtube.com/watch?v=CjCJ76oZXTE</link>
      <description><![CDATA[我在 Book Overflow 播客 上接受了有关 《重构》一书 的采访。我们讨论了这本书的起源、重构、测试和极限编程之间的关系、重构在实际中的应用，以及书籍和长篇散文在当今的作用。
更多…]]></description>
      <guid>https://www.youtube.com/watch?v=CjCJ76oZXTE</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:20 GMT</pubDate>
    </item>
    <item>
      <title>使用 GenAI 构建能力图并转换遗留系统</title>
      <link>https://martinfowler.com/articles/legacy-modernization-gen-ai.html#DiscoveringACapabilityMapOfASystem</link>
      <description><![CDATA[
Alessio Ferri、Tom Coggrave 和
Shodhan Sheth 完成了他们的文章，介绍了他们从使用 GenAI 处理遗留系统
中学到的东西。他们描述了 GenAI 处理非结构化信息的能力如何使构建遗留系统的功能图变得更加容易，将系统的功能与源代码的相关部分联系起来。 GenAI 还可用于
识别死代码区域，并有望更好地在平台和语言之间翻译系统。
更多…]]></description>
      <guid>https://martinfowler.com/articles/legacy-modernization-gen-ai.html#DiscoveringACapabilityMapOfASystem</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:20 GMT</pubDate>
    </item>
    <item>
      <title>深入了解 Strangler Fig 与移动应用的使用</title>
      <link>https://martinfowler.com/articles/strangler-fig-mobile-apps.html#DivingDeeperx2026</link>
      <description><![CDATA[
Matthew Foster 和 John Mikel Amiel
Regida 深入探讨了逐步现代化遗留移动应用程序的细节。 他们研究如何将绞杀者图植入现有应用程序，在新应用程序和旧应用程序之间建立双向通信，并确保对整个系统进行有效的回归测试。
更多…]]></description>
      <guid>https://martinfowler.com/articles/strangler-fig-mobile-apps.html#DivingDeeperx2026</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:19 GMT</pubDate>
    </item>
    <item>
      <title>将 Strangler Fig 与移动应用程序结合使用</title>
      <link>https://martinfowler.com/articles/strangler-fig-mobile-apps.html</link>
      <description><![CDATA[
我的同事经常参与对遗留系统的现代化改造，而我们的方法是循序渐进地进行。使用移动应用程序进行现代化改造会带来一些特定的挑战。Matthew Foster 和 John Mikel Amiel Regida 分享了他们最近参与的经验，从单片遗留应用程序转变为使用模块化微应用程序架构的应用程序。 
更多…]]></description>
      <guid>https://martinfowler.com/articles/strangler-fig-mobile-apps.html</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:19 GMT</pubDate>
    </item>
    <item>
      <title>在 Bluesky 上发帖，以及在社交媒体上发表其他想法</title>
      <link>https://martinfowler.com/articles/2024-social-media.html</link>
      <description><![CDATA[随着 Bluesky 上科技活动的近期增加，我决定

除了我的当前位置之外，我还将开始在那里发布帖子。
我还整理了我对社交媒体现状的总体看法，以及我如何使用社交媒体，现在距离马斯克沃事件已经过去了两年。
更多…]]></description>
      <guid>https://martinfowler.com/articles/2024-social-media.html</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:18 GMT</pubDate>
    </item>
    <item>
      <title>评估在移动应用程序上使用 Strangler Fig 的结果</title>
      <link>https://martinfowler.com/articles/strangler-fig-mobile-apps.html#Results</link>
      <description><![CDATA[
Matthew Foster 和 John Mikel Amiel Regida 完成了他们如何通过查看工作成果逐步实现移动应用程序现代化的说明。他们大大缩短了获得新价值的时间，并发现新应用程序中的更改可以在旧代码库所需时间的一半左右完成准备。
更多…]]></description>
      <guid>https://martinfowler.com/articles/strangler-fig-mobile-apps.html#Results</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:18 GMT</pubDate>
    </item>
    <item>
      <title>设计数据产品：从用例开始逆向思考</title>
      <link>https://martinfowler.com/articles/designing-data-products.html</link>
      <description><![CDATA[
业界越来越多地将创建数据产品作为分析数据的核心组织原则的价值视为其中的价值。Kiran Prakash 已帮助许多客户设计他们的数据产品，并分享他所学到的知识。特别是，他的方法论并不从考虑一些可能方便分享的数据开始，而是从数据产品的消费者需要开始。
更多…]]></description>
      <guid>https://martinfowler.com/articles/designing-data-products.html</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:17 GMT</pubDate>
    </item>
    <item>
      <title>探索 Gen AI：Copilot 的新多文件编辑</title>
      <link>https://martinfowler.com/articles/exploring-gen-ai.html#memo-11</link>
      <description><![CDATA[10 月底，GitHub Copilot 引入了一项非常强大的新编码辅助功能。这项新的“多文件编辑”功能将 AI 辅助的范围从小型本地化建议扩展到跨多个文件的更大规模实现。Birgitta Böckeler 试用了这项新功能，发现它的更改往往非常有用，并想知道它们需要哪些反馈循环。
更多…]]></description>
      <guid>https://martinfowler.com/articles/exploring-gen-ai.html#memo-11</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:17 GMT</pubDate>
    </item>
    <item>
      <title>设计数据产品：后续步骤</title>
      <link>https://martinfowler.com/articles/designing-data-products.html#HowBigShouldDataProductsBe</link>
      <description><![CDATA[
在我们设计完初始数据产品后，Kiran Prakash 在文章的最后带领我们完成了后续步骤：识别常见模式、改善开发人员体验以及处理治理。
更多…]]></description>
      <guid>https://martinfowler.com/articles/designing-data-products.html#HowBigShouldDataProductsBe</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:16 GMT</pubDate>
    </item>
    <item>
      <title>数据产品设计的概括</title>
      <link>https://martinfowler.com/articles/designing-data-products.html#OverlayAdditionalUseCasesAndGeneralise</link>
      <description><![CDATA[
在获得初始数据产品后，Kiran Prakash
带领我们完成后续步骤：涵盖类似用例以
概括数据产品，确定产品适合哪些领域，并考虑服务级别目标。 
更多…]]></description>
      <guid>https://martinfowler.com/articles/designing-data-products.html#OverlayAdditionalUseCasesAndGeneralise</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:16 GMT</pubDate>
    </item>
    <item>
      <title>使用 Codemods 进行重构以自动化 API 更改</title>
      <link>https://martinfowler.com/articles/codemods-api-refactoring.html</link>
      <description><![CDATA[
作为库开发人员，您可能会创建一个数十万开发人员每天依赖的流行实用程序，例如 lodash 或 React。随着时间的推移，可能会出现超出您最初设计的使用模式。当这种情况发生时，您可能需要通过添加参数或修改函数签名来扩展 API 以修复极端情况。挑战在于在不中断用户工作流程的情况下推出这些重大更改。 Juntao Qiu 发表了一篇文章，解释了我们如何使用 codemods 来解决这个问题。Codemods 是一种自动化大规模代码转换的工具，允许开发人员引入重大 API 更改并重构遗留代码库。
更多…]]></description>
      <guid>https://martinfowler.com/articles/codemods-api-refactoring.html</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:15 GMT</pubDate>
    </item>
    <item>
      <title>基于设计令牌的 UI 架构</title>
      <link>https://martinfowler.com/articles/design-token-based-ui-architecture.html</link>
      <description><![CDATA[
设计令牌是以数据形式表示的基本设计决策。
Andreas Kutschmann 解释了它们的工作原理
以及如何组织它们以平衡可扩展性、可维护性和
开发人员体验。
更多…]]></description>
      <guid>https://martinfowler.com/articles/design-token-based-ui-architecture.html</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:15 GMT</pubDate>
    </item>
    <item>
      <title>2024 年我最喜欢的音乐发现</title>
      <link>https://martinfowler.com/articles/2024-music.html</link>
      <description><![CDATA[
我养成了在新年伊始分享去年发现的六张我最喜欢的专辑的习惯。今年的专辑包括凯尔特爵士乐、trip-hop 新法朵、2020 年代的爵士融合、俏皮的和声，以及印度古典音乐家和弦乐四重奏之间的精彩合作。 （我也无法将自己限制在六首。）
更多…]]></description>
      <guid>https://martinfowler.com/articles/2024-music.html</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:14 GMT</pubDate>
    </item>
    <item>
      <title>更复杂的 codemod</title>
      <link>https://martinfowler.com/articles/codemods-api-refactoring.html#RefactoringAnAvatarComponent</link>
      <description><![CDATA[
Juntao Qiu 转到 更复杂的 codemod 示例，该示例从 JSX 组件中提取工具提示职责。
这说明了如何通过几个步骤来操作 AST。
更多…]]></description>
      <guid>https://martinfowler.com/articles/codemods-api-refactoring.html#RefactoringAnAvatarComponent</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:14 GMT</pubDate>
    </item>
    <item>
      <title>其他语言的 Codemods</title>
      <link>https://martinfowler.com/articles/codemods-api-refactoring.html#CodemodsInOtherLanguages</link>
      <description><![CDATA[
Juntao Qiu 通过查看一些其他JavaScript 世界之外的方法（例如 JavaParser 和 OpenRewrite）完成了对 codemods 的描述。
更多…]]></description>
      <guid>https://martinfowler.com/articles/codemods-api-refactoring.html#CodemodsInOtherLanguages</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:13 GMT</pubDate>
    </item>
    <item>
      <title>修复 Codemods 的常见缺陷</title>
      <link>https://martinfowler.com/articles/codemods-api-refactoring.html#FixingCommonPitfallsOfCodemods</link>
      <description><![CDATA[
到目前为止，Juntao Qiu 描述的 codemods 非常吸引人，但相当简单。真正的代码库提供了更多挑战。 在本期中，他介绍了如何通过编写 codemods 来解决更复杂的情况。
更多…]]></description>
      <guid>https://martinfowler.com/articles/codemods-api-refactoring.html#FixingCommonPitfallsOfCodemods</guid>
      <pubDate>Wed, 22 Jan 2025 18:03:13 GMT</pubDate>
    </item>
    </channel>
</rss>