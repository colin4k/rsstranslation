<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 18 Apr 2025 03:14:36 GMT</lastBuildDate>
    <item>
      <title>试图解决跨平台AI计费挑战作为独奏工程师/创始人 - 需要反馈</title>
      <link>https://www.reddit.com/r/programming/comments/1k1ugqy/attempting_to_solve_the_crossplatform_ai_billing/</link>
      <description><![CDATA[Hey Everyone I&#39;m a self-taught solo engineer/developer (with university + multi-year professional software engineer experience) developing a solution for a growing problem I&#39;ve noticed many organizations are facing: managing and optimizing spending across multiple AI and LLM platforms (OpenAI, Anthropic, Cohere, Midjourney, etc.). The问题我正在研究/试图解决： 从我自己的研究和与各个团队的对话中，我看到了一致的挑战：  没有集中的方式来跟踪多个AI提供商跨多个AI提供商的支出 难以将特定的部门，项目，lie&gt; Infivion  lie    cyc 峰值对自己的事业的可见性有限 最小工具，以预测AI作为使用量表  我提出的解决方案   构建平台 - 静态计费管理解决方案，该解决方案将用于：             fi/li&gt; spspende  spende 分配 提供用法分析来确定优化机会 包括可自定义的预算管理警报 根据历史用法模式生成预测   我需要您的投入：        &lt;我要对于您的组织来说，最有价值吗？ 除了主要LLM提供商以外的哪些平台我们应该支持什么？ 您将如何将其与现有系统整合在一起？ 哪些报告功能对您最重要的是最重要的报告功能？和/或我可以构建的其他项目的建议，因为我非常擅长快速启动MVP（几个小时至1周）。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/frozen-insightful-22        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1ugqy/attempting_to_solve_the_crossplatform_ai_billing/</guid>
      <pubDate>Fri, 18 Apr 2025 02:36:37 GMT</pubDate>
    </item>
    <item>
      <title>谁能对我的高年级项目留下反馈？</title>
      <link>https://www.reddit.com/r/programming/comments/1k1r39c/can_anyone_leave_feedback_on_my_senior_year/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在为我的高年级项目开发虚拟助手。任何人都可以留下反馈吗？不必疯狂。截至今年，我是编码的新手。我也认识到我将API键放入其中，此后已更改。感谢任何可以阅读此书的人。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/sharky6868       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1r39c/can_anyone_leave_feedback_on_my_senior_year/</guid>
      <pubDate>Thu, 17 Apr 2025 23:40:32 GMT</pubDate>
    </item>
    <item>
      <title>我发布了我的软件开发研究路径的更新版本</title>
      <link>https://www.reddit.com/r/programming/comments/1k1pkys/i_published_an_updated_version_of_my_study_path/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   我们几乎在那里！ Approaching the 3K stars 🥳 It’s been a while since my last update, but the Study Path is now updated with more content and a better overall presentation, just in time as we approach the 3K stars on GitHub! This project is for anyone looking for well-organized resources on software development, with curated sections on Clean Code,  tdd ，重构，软件体系结构， ddd ，微服务等等。 🙌 始终欢迎反馈，如果您想做出贡献，请随时提出想法或提取请求！ 链接到学习路径： https：&gt; https：&gt; 有什么新鲜事物？  ✍️更新了简介  - 更清晰的介绍。    会话摘要  - 现在每个部分都包括一个简短的摘要，包括一个简短的摘要以突出其价值。             li for posite   - 探索通过GoodReads       - 易于浏览和跟踪阅读的固体关系。            -       域模型 honfor  aft fordion  al stront 微服务  - 关于将您的整体代码基于微服务的指南。  更多的重构练习  - 新的代码kata，以更好地探索您的IDE的功能。     在事件范围内更多地“强度 lie&gt; lie&gt; lie&gt;       。和重构  - 一种替代性视频测试和重构，具有更多的见解！  更多关于单元测试的更多信息  - 额外的内容以在单元测试方面更好地进行。    简单设计的四个规则  - 使用新书扩展。提交由＆＃32; /u/u/u/deepwheel3854      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1pkys/i_published_an_updated_version_of_my_study_path/</guid>
      <pubDate>Thu, 17 Apr 2025 22:28:31 GMT</pubDate>
    </item>
    <item>
      <title>一对程序员团结：安静的叛乱</title>
      <link>https://www.reddit.com/r/programming/comments/1k1p007/pair_programmers_unite_a_quiet_rebellion/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/adamard      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1p007/pair_programmers_unite_a_quiet_rebellion/</guid>
      <pubDate>Thu, 17 Apr 2025 22:01:57 GMT</pubDate>
    </item>
    <item>
      <title>Python中的自动化脚本，用于Deauth攻击。</title>
      <link>https://www.reddit.com/r/programming/comments/1k1oiyb/an_automation_script_in_python_for_deauth_attacks/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  注意：此脚本严格用于授权笔测试。未经授权使用此工具在其他人的Wi-Fi网络上是非法的，可能会导致严重的刑事指控，包括入狱时间。    Phantom 是一个基于Python的自动化脚本，旨在使用AirCrack-NG Suite进行DEAUTH攻击，从而简化了整个渗透测试仪的过程。它会使用 MacChanger 自动欺骗您的无线接口的MAC地址，从而使将活动追溯到设备更加困难。 在启动时，幻影扫描附近的Wi-Fi网络并提供了所有可用目标的干净，索引清单。选择网络后，用户可以选择对所有连接的设备进行否定，或者针对特定客户端以进行更集中的攻击。该脚本还管理了无线接口，在开始时启用了监视器模式，并在退出时将其还原回托管模式。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ney_option_7459        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1oiyb/an_automation_script_in_python_for_deauth_attacks/</guid>
      <pubDate>Thu, 17 Apr 2025 21:40:47 GMT</pubDate>
    </item>
    <item>
      <title>vaadin组件生态系统：强大应用的构建块</title>
      <link>https://www.reddit.com/r/programming/comments/1k1nqs5/vaadin_components_ecosystem_building_blocks_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/pbalves     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1nqs5/vaadin_components_ecosystem_building_blocks_for/</guid>
      <pubDate>Thu, 17 Apr 2025 21:06:36 GMT</pubDate>
    </item>
    <item>
      <title>纳米秒 - 越过C ++示踪剂</title>
      <link>https://www.reddit.com/r/programming/comments/1k1nmh4/nanosecondsoverhead_c_tracer/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我做了一个项目，该项目是一个基于仪器的示踪剂/探索器，可让您以非常好的时间分辨率获得系统执行时间表。尽管周围有许多工具可以做类似的事情，但我为此感到自豪，因为它可以使您达到非常低的开销，即使每次收集的活动8纳秒秒也是如此（例如，功能主体呼叫将需要两个这样的事件，一个可以标记入口，第二个要标记出口）。这项工作最初是作为我工作的一部分完成的，但我的公司将其版本开源为开源，因此我最终可以重新分配自己的公司，即它的版本。  为什么很酷，如何帮助您？ If you have some multithreaded application that has very very tight work being done there (on few microseconds level) with various dependencies between those threads, analysing performance issues can be very hard because sampling profiler won&#39;t tell you everything due to averaging everything, and manual instrumentation based on standard functionality can be simply too slow to keep some phenomena happening during profiling, causing performance Heisenbugs, kinda. Additional thing that make this stand out - 您只需要在项目中包括3个文件才能开始运行。它非常轻巧，容易（如果您先进的话）可以理解。我猜它提高了其教育价值，因为您可以轻松地了解正在发生的事情，并且即使您不想实际使用它，也可以学习有关汇编代码的内容。我创建了一篇文章，其中提到了我试图解释为什么某些事情是这样做的，而不是另一种方法。 当然不是理想的，它是不可便携的（仅支持现代X64 CPU和现代的Windows/Ubuntu oss），并且没有非常干净的码头，因为它的某些东西可以清洁，因此它的态度并不是很干净，因此，这是不理会的，所以我相信的表现都不那么明智，所以我相信这是我所不相信的，所以我可以相信，我的效果是我的，所以我可以相信，我的效果是我的，所以我相信的是，我的表现是我的，所以我不相信，我的效果是我的，所以我相信的是，我的表现是不明显的，所以我可以相信，我的效果是我的，所以我相信的是，我的效果是不可能的，所以我可以相信我的东​​西。 ：p您已经被警告。 有一天，我计划还制作另一篇文章，类似于较不高级读者的代码演练，但是我需要花一些时间来做...  我希望您喜欢它，享受！   &lt;！ -  sc_on--&gt;＆＃32＆＃32;提交由＆＃32; /u/u/stustmyrandomusername      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1nmh4/nanosecondsoverhead_c_tracer/</guid>
      <pubDate>Thu, 17 Apr 2025 21:01:25 GMT</pubDate>
    </item>
    <item>
      <title>跨站点Websocket于2025年劫持剥削</title>
      <link>https://www.reddit.com/r/programming/comments/1k1m4oc/crosssite_websocket_hijacking_exploitation_in_2025/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好，我们发布了一篇新的博客文章，重点介绍了跨站点Websocket劫持的当前状态！我们最新的博客文章涵盖了现代浏览器安全功能如何（或不）保护用户免受这种经常被忽视的漏洞类别的影响。我们讨论Firefox，Chrome中的专用网络访问中的Cookie全面保护，并查看Samesite属性在CSWH攻击中的作用。该帖子还包括基于现实世界测试中遇到的情况的一些简短案例研究，除了一个简单的测试站点，读者可以托管以探索每个脆弱性条件。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/IncludeSec   [link] ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1m4oc/crosssite_websocket_hijacking_exploitation_in_2025/</guid>
      <pubDate>Thu, 17 Apr 2025 19:58:02 GMT</pubDate>
    </item>
    <item>
      <title>每个人都知道您的位置，第2部分：自己尝试并分享结果</title>
      <link>https://www.reddit.com/r/programming/comments/1k1lu1o/everyone_knows_your_location_part_2_try_it/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/westernbest      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1lu1o/everyone_knows_your_location_part_2_try_it/</guid>
      <pubDate>Thu, 17 Apr 2025 19:45:34 GMT</pubDate>
    </item>
    <item>
      <title>C ++的协方差和违反</title>
      <link>https://www.reddit.com/r/programming/comments/1k1ku83/covarianza_y_contravarianza_en_c/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;         [links＆＃32; [评论1K1KU83/协方差。]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1ku83/covarianza_y_contravarianza_en_c/</guid>
      <pubDate>Thu, 17 Apr 2025 19:03:18 GMT</pubDate>
    </item>
    <item>
      <title>n-params vs单个参数</title>
      <link>https://www.reddit.com/r/programming/comments/1k1ku3n/nparams_vs_single_param/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Carlos_Menezes   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1ku3n/nparams_vs_single_param/</guid>
      <pubDate>Thu, 17 Apr 2025 19:03:09 GMT</pubDate>
    </item>
    <item>
      <title>尘世关</title>
      <link>https://www.reddit.com/r/programming/comments/1k1kn02/earthly_shutting_down_earthfiles/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketchupanmustard      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1kn02/earthly_shutting_down_earthfiles/</guid>
      <pubDate>Thu, 17 Apr 2025 18:55:02 GMT</pubDate>
    </item>
    <item>
      <title>我使用Manacher的算法建造了一个完整的O（N）palindrome Finder  - 这就是它的工作方式！</title>
      <link>https://www.reddit.com/r/programming/comments/1k1k786/i_built_a_full_on_palindrome_finder_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！我是一位对AL，全栈开发和算法充满热情的15岁程序员。我刚刚上传了一个YouTube视频，其中解释了Manacher的算法，该算法在线性时间（ON）中找到了最长的alindromic substring。该视频对初学者友好，我还通过解释在Github上分享了完全评论的Python代码。我希望您对视频或我解释的方式有任何反馈。随时查看我的github-您会从那里找到该视频中的代码，以及即将推出的全栈网络应用程序！  github： https:/ https://github.com/github.com/coderpeti     /u/u/ready_put2582      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1k786/i_built_a_full_on_palindrome_finder_with/</guid>
      <pubDate>Thu, 17 Apr 2025 18:36:23 GMT</pubDate>
    </item>
    <item>
      <title>“塞尔维亚：用于针对塞尔维亚学生活动家手机的Cellebrite零日漏洞”  - “针对Linux内核USB驱动程序的Exploit，启用了具有物理访问对锁定的Android设备的物理访问的Cellebrite客户，以绕过旁路，并在设备上获得特权访问。” [PDF]</title>
      <link>https://www.reddit.com/r/programming/comments/1k1jn9x/serbia_cellebrite_zeroday_exploit_used_to_target/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/throwaway16830261     [link]      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1jn9x/serbia_cellebrite_zeroday_exploit_used_to_target/</guid>
      <pubDate>Thu, 17 Apr 2025 18:13:28 GMT</pubDate>
    </item>
    <item>
      <title>MCP和LLMS对软件开发的影响 - 一个实际的例子</title>
      <link>https://www.reddit.com/r/programming/comments/1k1hp4u/the_impact_of_mcp_and_llms_on_software/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/jns111      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1hp4u/the_impact_of_mcp_and_llms_on_software/</guid>
      <pubDate>Thu, 17 Apr 2025 16:54:32 GMT</pubDate>
    </item>
    <item>
      <title>Python 3.14语法更新将使您的代码更安全，更好</title>
      <link>https://www.reddit.com/r/programming/comments/1k1gr2t/python_314_syntax_updates_will_make_your_code/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/yangzhou1993     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1gr2t/python_314_syntax_updates_will_make_your_code/</guid>
      <pubDate>Thu, 17 Apr 2025 16:15:50 GMT</pubDate>
    </item>
    <item>
      <title>优化Apache Cassandra中的压实</title>
      <link>https://www.reddit.com/r/programming/comments/1k1fzwp/optimizing_compaction_in_apache_cassandra/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿 - 我最近对Apache Cassandra中压实的深度性能分析进行了深入的性能分析。结果，已经实现了一些更改，大大增加了吞吐量，从而使用户可以运行更密集的节点。该帖子具有分析和优化的详细信息，直到各个文件系统调用以及如何改进它们。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/rustyrazorblade       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1fzwp/optimizing_compaction_in_apache_cassandra/</guid>
      <pubDate>Thu, 17 Apr 2025 15:44:59 GMT</pubDate>
    </item>
    <item>
      <title>无磁盘Kafka：80％瘦，100％开放</title>
      <link>https://www.reddit.com/r/programming/comments/1k1fmd1/diskless_kafka_80_leaner_100_open/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/sh_tomer      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1fmd1/diskless_kafka_80_leaner_100_open/</guid>
      <pubDate>Thu, 17 Apr 2025 15:29:12 GMT</pubDate>
    </item>
    <item>
      <title>打字稿食谱•Stefan Baumgartner和PeterKröner</title>
      <link>https://www.reddit.com/r/programming/comments/1k1fc58/typescript_cookbook_stefan_baumgartner_peter/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/goto-con       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1fc58/typescript_cookbook_stefan_baumgartner_peter/</guid>
      <pubDate>Thu, 17 Apr 2025 15:17:24 GMT</pubDate>
    </item>
    <item>
      <title>有目的4：添加模型和关系</title>
      <link>https://www.reddit.com/r/programming/comments/1k1f482/building_with_purpose_4_adding_the_models_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/jordiolle11   [link] ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k1f482/building_with_purpose_4_adding_the_models_and/</guid>
      <pubDate>Thu, 17 Apr 2025 15:08:07 GMT</pubDate>
    </item>
    </channel>
</rss>