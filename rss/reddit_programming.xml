<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 12 May 2025 15:02:49 GMT</lastBuildDate>
    <item>
      <title>DDD：AI应用程序一代中缺少的作品？</title>
      <link>https://www.reddit.com/r/programming/comments/1kku7zb/ddd_the_missing_piece_in_ai_app_generation/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近一直在尝试使用Bolt and lodable.ai等工具。 A16Z文章（ https://a16z.com/ai-web-app-builders/  - 对于简单的应用程序，我同意！ ，但我已经达到了精确的限制，文章描述了：“与了解基础知识但可以很容易地陷入“毁灭性循环”的初级开发人员相当由于以下问题：   - 找到合适的调试代码是“推理和搜索问题”    - 代码具有深度的依赖关系，“系统的一部分中的变化可能会变得不可预测地“  我的经验”。这些工具非常适合快速原型，但是在实现真实的业务逻辑时会崩溃 - 尤其是对于规则复杂且相互联系的企业应用程序。 这使我考虑了域驱动的设计（DDD）作为可能的解决方案。如果我们使用AI来帮助建模业务领域，然后从该模型中生成一个应用程序？ 我们一直在构建一个名为Swoft的工具，该应用程序使用该方法，该怎么办，该怎么办。它使用AI来帮助定义您的域模型（实体，价值对象，聚合），然后生成一个遵循DDD/CQRS模式的完整应用程序。   早期结果即使对我们来说也令人惊讶 - 技术债务比率仅为0.2％（与行业平均水平＆GT相比; 10％; 10％），以及降低了95％的市场。我们已经为有兴趣尝试这种方法的开发人员打开了一个候补名单（我没想到的是3000多种注册）。 关键区别：而不是生成原始代码，而是为实施清洁体系结构的框架生成一种配置。 我很好奇，如果其他人遇到了与这些工具相似的工具，则在尝试构建复杂的应用程序时，我会遇到类似的限制？或者，如果有人尝试将DDD原理应用于AI生成的代码？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/usimal_working6841      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kku7zb/ddd_the_missing_piece_in_ai_app_generation/</guid>
      <pubDate>Mon, 12 May 2025 14:41:16 GMT</pubDate>
    </item>
    <item>
      <title>为什么春天比节点好8倍（不，这不是辩论）</title>
      <link>https://www.reddit.com/r/programming/comments/1kktzf7/why_spring_is_8x_better_than_node_and_no_thats/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  春季要比开发人员体验和功能中的nodejs好得多！ 在媒体上查看文章： https://medium.com/p/9938d2e238e4      &lt;！ -  sc_on- sc_on-提交由＆＃32; /u/u/doubleface2121      &lt;a href =“ https://www.reddit.com/r/programming/comments/1kktzf7/why_spring_is_8x_8x_better_than_than_node_node_and_no_thats/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kktzf7/why_spring_is_8x_better_than_node_and_no_thats/</guid>
      <pubDate>Mon, 12 May 2025 14:31:22 GMT</pubDate>
    </item>
    <item>
      <title>R中的R：宣布我们的WebAssembly发行</title>
      <link>https://www.reddit.com/r/programming/comments/1kktr8t/r_in_the_browser_announcing_our_webassembly/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://blog.jupyter.org/r-in-the-the-browser-announcing-ir-webassembly-distribution-9450E9539ED5”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kktr8t/r_in_the_browser_announcing_our_webassembly/</guid>
      <pubDate>Mon, 12 May 2025 14:22:06 GMT</pubDate>
    </item>
    <item>
      <title>帕斯卡（Pascal）编程粉丝第四次出现了新的拉撒路</title>
      <link>https://www.reddit.com/r/programming/comments/1kkt7wd/a_new_lazarus_arises_for_the_fourth_time_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/waozen        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkt7wd/a_new_lazarus_arises_for_the_fourth_time_for/</guid>
      <pubDate>Mon, 12 May 2025 13:59:36 GMT</pubDate>
    </item>
    <item>
      <title>USERTOUR v0.1.10  - 开源用户入门平台现在支持REST API</title>
      <link>https://www.reddit.com/r/programming/comments/1kkt0fb/usertour_v0110_opensource_user_onboarding/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Crafty_Impression_37   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkt0fb/usertour_v0110_opensource_user_onboarding/</guid>
      <pubDate>Mon, 12 May 2025 13:50:20 GMT</pubDate>
    </item>
    <item>
      <title>GitHub暴露了什么：名称，位置等等</title>
      <link>https://www.reddit.com/r/programming/comments/1kksew2/what_github_exposes_about_you_name_location_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/persianmg      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kksew2/what_github_exposes_about_you_name_location_and/</guid>
      <pubDate>Mon, 12 May 2025 13:23:30 GMT</pubDate>
    </item>
    <item>
      <title>理解带有真实示例的node.js流</title>
      <link>https://www.reddit.com/r/programming/comments/1kkrzu4/understanding_nodejs_streams_with_a_real_example/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkrzu4/understanding_nodejs_streams_with_a_real_example/</guid>
      <pubDate>Mon, 12 May 2025 13:03:59 GMT</pubDate>
    </item>
    <item>
      <title>数据库中的1个图和204个单词</title>
      <link>https://www.reddit.com/r/programming/comments/1kkrsyl/database_sharding_in_1_diagram_and_204_words/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/stmoreau      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkrsyl/database_sharding_in_1_diagram_and_204_words/</guid>
      <pubDate>Mon, 12 May 2025 12:55:10 GMT</pubDate>
    </item>
    <item>
      <title>我如何通过反向工程WSC毁了假期</title>
      <link>https://www.reddit.com/r/programming/comments/1kkrqos/how_i_ruined_my_vacation_by_reverse_engineering/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nxgz      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkrqos/how_i_ruined_my_vacation_by_reverse_engineering/</guid>
      <pubDate>Mon, 12 May 2025 12:52:07 GMT</pubDate>
    </item>
    <item>
      <title>集中化HTTP错误处理</title>
      <link>https://www.reddit.com/r/programming/comments/1kkr9mb/centralize_http_error_handling_in_go/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/softwarecitadel      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkr9mb/centralize_http_error_handling_in_go/</guid>
      <pubDate>Mon, 12 May 2025 12:29:04 GMT</pubDate>
    </item>
    <item>
      <title>16年的CloudWatch和........邻里发生了变化吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1kkqtmb/16_years_of_cloudwatch_and_has_the_neighbourhood/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/elizobserves     [link]   ＆＃32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkqtmb/16_years_of_cloudwatch_and_has_the_neighbourhood/</guid>
      <pubDate>Mon, 12 May 2025 12:05:52 GMT</pubDate>
    </item>
    <item>
      <title>实现Graylog的根本简单替代方案</title>
      <link>https://www.reddit.com/r/programming/comments/1kkqnx9/implementing_a_radically_simple_alternative_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rflurker       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkqnx9/implementing_a_radically_simple_alternative_to/</guid>
      <pubDate>Mon, 12 May 2025 11:58:06 GMT</pubDate>
    </item>
    <item>
      <title>GTA 6完全在X86组件中手工编码？</title>
      <link>https://www.reddit.com/r/programming/comments/1kkqj7d/gta_6_coded_entirely_in_x86_assembly_by_hand/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  您可能听说过即将推出的视频游戏《侠盗猎车手6》。有传言说，开发人员正在手工编码它，该线路是线条，for Line for Line。这样，他们就可以从控制台中获得最大值。这也是为什么他们要花13年才能完成的原因。这有多大的可能性？有可能吗？我本人不是程序员。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/stdlib_h     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkqj7d/gta_6_coded_entirely_in_x86_assembly_by_hand/</guid>
      <pubDate>Mon, 12 May 2025 11:51:03 GMT</pubDate>
    </item>
    <item>
      <title>平台工程：演变还是重塑DevOps？</title>
      <link>https://www.reddit.com/r/programming/comments/1kkqbc2/platform_engineering_evolution_or_just_a/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/agbell      [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkqbc2/platform_engineering_evolution_or_just_a/</guid>
      <pubDate>Mon, 12 May 2025 11:38:54 GMT</pubDate>
    </item>
    <item>
      <title>Astronoby v0.7.0</title>
      <link>https://www.reddit.com/r/programming/comments/1kkpdaj/astronoby_v070/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rhannequin      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkpdaj/astronoby_v070/</guid>
      <pubDate>Mon, 12 May 2025 10:43:32 GMT</pubDate>
    </item>
    <item>
      <title>Tanstack查询RFC：统一的命令查询方法</title>
      <link>https://www.reddit.com/r/programming/comments/1kkobvz/tanstack_query_rfc_unified_imperative_query/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/um commination-plum-5970       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkobvz/tanstack_query_rfc_unified_imperative_query/</guid>
      <pubDate>Mon, 12 May 2025 09:35:42 GMT</pubDate>
    </item>
    <item>
      <title>光标如何索引代码库（使用默克尔树）</title>
      <link>https://www.reddit.com/r/programming/comments/1kkmjr4/how_cursor_indexes_codebases_using_merkle_trees/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rtzon      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkmjr4/how_cursor_indexes_codebases_using_merkle_trees/</guid>
      <pubDate>Mon, 12 May 2025 07:25:12 GMT</pubDate>
    </item>
    <item>
      <title>为什么构建软件框架</title>
      <link>https://www.reddit.com/r/programming/comments/1kkj5vb/why_build_software_frameworks/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/n1ghtcod3r      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkj5vb/why_build_software_frameworks/</guid>
      <pubDate>Mon, 12 May 2025 03:47:02 GMT</pubDate>
    </item>
    <item>
      <title>📦比较静态二进制尺寸和“ Hello，World！”的记忆。使用❄️NIX +薄片跨语言的程序。</title>
      <link>https://www.reddit.com/r/programming/comments/1kkivkq/comparing_static_binary_sizes_memory_of_hello/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rezigned      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkivkq/comparing_static_binary_sizes_memory_of_hello/</guid>
      <pubDate>Mon, 12 May 2025 03:30:41 GMT</pubDate>
    </item>
    <item>
      <title>libcello-一个现代化C的很酷的项目</title>
      <link>https://www.reddit.com/r/programming/comments/1kkhxcp/libcello_a_cool_project_to_modernize_c/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  不是我的。我一直想对此做些事情，但是它从未与个人或专业匹配。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/esdraelon      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkhxcp/libcello_a_cool_project_to_modernize_c/</guid>
      <pubDate>Mon, 12 May 2025 02:37:33 GMT</pubDate>
    </item>
    </channel>
</rss>