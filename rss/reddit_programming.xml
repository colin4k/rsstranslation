<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 30 Apr 2025 18:03:44 GMT</lastBuildDate>
    <item>
      <title>实验：使用歧管的Java中的向量数学</title>
      <link>https://www.reddit.com/r/programming/comments/1kbn1ka/experimental_vector_math_in_java_using_manifold/</link>
      <description><![CDATA[An experimental library for more concise, readable vector syntax in Java--built on the Manifold project, which enables operator overloading and dimensional arithmetic. Length vectors are expressed naturally using rational numbers with SI units like meters (m) and angular units like degrees, including directions such as N, S, E和W.向量操作（如加法）直接与操作员一起编写：``````````````````````````````````````````````````````````` ``````````通过歧视对用户定义的单元常数的支持和 vector类型，例如长度向量：````````java公共最终班级长度向量向量扩展了vector＆lt; length，lengthunit，length vortector＆gt; {公共长度向量（长度大小，角度角）{super（幅度，角度）; }   @Override public Lengusvector Make（长度大小，角度角）{返回新长度向量（幅度，角度）; }   @Override public length vector副本（理性幅度）{返回新的长度向量（new Length（agent getsMagnitude（）。getBaseunit（）。getBaseunit（），getMagnitude（）。getDisPlayunit（）），getangle（getAngle（）），getangle（））; }}```` 也可以使用其他向量类型，包括 timeVector 和 velocityvector 。 探索 cistrold-science 库库来了解更多。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://github.com/manifold-systems/manifold/blob/master/manifold-deps-parent/manifold-science/readme.md”&gt; [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbn1ka/experimental_vector_math_in_java_using_manifold/</guid>
      <pubDate>Wed, 30 Apr 2025 18:02:12 GMT</pubDate>
    </item>
    <item>
      <title>厌倦了手动删除随机照片？尝试我们的应用程序 -  iOS＆Android的智能照片清洁剂📱✨</title>
      <link>https://www.reddit.com/r/programming/comments/1kbmxt6/tired_of_deleting_random_photos_manually_try_our/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好，朋友， 我们厌倦了无休止的滚动和随机删除手机的垃圾照片 - 因此我们构建了智能照片清洁器 - 免费。现在可以在App Store和Google Play上使用 - 我们希望您能尝试分享您的反馈！ 🙏 🔥🔥这就是它的作用：   - 清理清理 - 删除或保留照片（例如使用Tinder  ） - 喜欢您的最佳镜头 - 将最爱保存到私人的照片中，然后将最喜欢的照片保存到“喜欢的照片”中。 Library    - 深色主题 +超级清洁UI  - 最小，友好且容易在眼睛上   - 私密 - 首先 - 我们什么都不存储。您的照片留在您的设备上 让它旋转，清理存储空间，并让我们知道您的想法。您的反馈将帮助我们改善！ 😊 谢谢，快乐的刷！    - 峰ai   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/sdkabeta      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbmxt6/tired_of_deleting_random_photos_manually_try_our/</guid>
      <pubDate>Wed, 30 Apr 2025 17:58:16 GMT</pubDate>
    </item>
    <item>
      <title>认为FIFO保证将防止比赛状况，直到我遇到这个问题</title>
      <link>https://www.reddit.com/r/programming/comments/1kbmsb4/thought_fifo_guarantee_would_prevent_race/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  好吧，我开始建立基于筏算法的分布式钥匙值商店。   和关于筏的事物是您编写将复制的日志...达成共识之后 - 嗯，这是很好的 筏本身并不是问题，但是我对FIFO保证做出的假设有点欺骗了我相信没有种族条件 - 情况并非如此。  例如，   - 第一个请求介绍：   x y      - 第二请求是为了将值增加1     green x       如果这些命令在这些命令中均为有效，则它们在ikement中有效。但是，当应用时，实际状态可能已更改 -  e.g。， engry 现在可以应用于非数字字符串。 这会使用挑战引入并迫使我选择：     - 允许登录无论如何，并在applip   proke中进行验证  这次是第一个。 这个分布式的东西是一个真正的乐趣，我觉得我对定时假设，异步，持久性，网络，伐木等了解了很多。  查看我目前正在从事的项目： https://github.com/migorithm/duva    ，如果您对您有兴趣，请贡献！我们需要您的支持。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/letmegomigo    href =“ https://migorithm.github.io/duva/posts/2025/04/29/deferred_validation.html”&gt; [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbmsb4/thought_fifo_guarantee_would_prevent_race/</guid>
      <pubDate>Wed, 30 Apr 2025 17:51:55 GMT</pubDate>
    </item>
    <item>
      <title>我试图将坏苹果作为噪音渲染</title>
      <link>https://www.reddit.com/r/programming/comments/1kblw0p/i_tried_rendering_bad_apple_as_a_noise/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;    https://youtu.be/yj3xdm5pm7g   提交由＆＃32; /u/u/i_code_chaos       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kblw0p/i_tried_rendering_bad_apple_as_a_noise/</guid>
      <pubDate>Wed, 30 Apr 2025 17:14:51 GMT</pubDate>
    </item>
    <item>
      <title>售价30万美元的Devinai Secret现在是开源的</title>
      <link>https://www.reddit.com/r/programming/comments/1kbkymy/the_300k_devinai_secret_is_now_open_source/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  您可能已经听说过Devinai的新版本DeepWiki-A工具，该工具分析了GitHub Repos并生成了AI驱动的文档。捕获？ It reportedly cost $300K in compute and is soon gonna be locked behind a paywall. I thought: why not make this accessible to everyone? Introducing Open DeepWiki: An open-source, self-hosted alternative that turns any GitHub repo into a comprehensive wiki with AI-generated docs, architecture diagrams, and code解释。   没有云锁定，没有付费墙，只有本地，私人分析。功能：    ai生成的文档（支持GPT，Gemini和本地模型） 视觉图（使用Mermeraid.js）   li&gt; li&gt; li&gt; li&gt;＆amp;私人存储库，完全在您的机器上运行    repo： 提交由＆＃32; /u/u/noad5720      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbkymy/the_300k_devinai_secret_is_now_open_source/</guid>
      <pubDate>Wed, 30 Apr 2025 16:36:36 GMT</pubDate>
    </item>
    <item>
      <title>不要让实施详细信息破坏您的微服务测试</title>
      <link>https://www.reddit.com/r/programming/comments/1kbkwlq/dont_let_implementation_details_ruin_your/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nejcko      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbkwlq/dont_let_implementation_details_ruin_your/</guid>
      <pubDate>Wed, 30 Apr 2025 16:34:15 GMT</pubDate>
    </item>
    <item>
      <title>现代版本控制应用程序和平台 - 备忘单</title>
      <link>https://www.reddit.com/r/programming/comments/1kbkf6q/modern_version_control_apps_platforms_a_cheatsheet/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/hereiClife       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbkf6q/modern_version_control_apps_platforms_a_cheatsheet/</guid>
      <pubDate>Wed, 30 Apr 2025 16:14:26 GMT</pubDate>
    </item>
    <item>
      <title>AI时代的Java：建立具有开源力的AI模型</title>
      <link>https://www.reddit.com/r/programming/comments/1kbj644/java_in_the_age_of_ai_building_ai_models_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我写了一篇文章，讲述了java是如何用来构建AI模型的文章，如果用于构建AI模型以及您应该感兴趣的原因，Java强度是什么，本文是由网络研讨会启发的。提交由＆＃32; /u/u/lolmaz    [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbj644/java_in_the_age_of_ai_building_ai_models_with/</guid>
      <pubDate>Wed, 30 Apr 2025 15:22:19 GMT</pubDate>
    </item>
    <item>
      <title>Minecraft像不到一条推文的景观</title>
      <link>https://www.reddit.com/r/programming/comments/1kbiu8w/minecraft_like_landscape_in_less_than_a_tweet/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbiu8w/minecraft_like_landscape_in_less_than_a_tweet/</guid>
      <pubDate>Wed, 30 Apr 2025 15:08:39 GMT</pubDate>
    </item>
    <item>
      <title>使用双子座自动化代码删除（和一点python）</title>
      <link>https://www.reddit.com/r/programming/comments/1kbhy7c/automating_code_deletion_with_gemini_and_a_little/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/kaycebasques       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbhy7c/automating_code_deletion_with_gemini_and_a_little/</guid>
      <pubDate>Wed, 30 Apr 2025 14:31:04 GMT</pubDate>
    </item>
    <item>
      <title>今天在Code HQ（4月30日）中：AI发生了生存危机，Rust在弹力，以及为什么我的Python代码试图杀死我</title>
      <link>https://www.reddit.com/r/programming/comments/1kbhep5/today_in_code_hq_april_30_ais_having_an/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿书呆子，开发人员，窃窃私语者和AI提示诗人， 欢迎您每天的剂量“今天的编译器正在发生什么？” — brought to you by Code HQ, a new micro-community where we solve bugs, share brain-melting breakthroughs, and occasionally cry in semicolons. Let’s dive into the weird and wonderful coding world of April 30, 2025:   AI Now Explains Its Code… And Might Be Smarter Than You  Today, MIT梅塔（Meta）发行了一篇有关AI模型的新论文，该论文不仅撰写代码 - 它像有太多咖啡的教授一样解释了它。 它不仅会为您提供功能。它告诉您为什么它存在，每行会做什么，偶尔会提供未经请求的生活建议。 为什么这很重要：如果这足够好，堆栈溢出可能必须将品牌重塑为“只是氛围”。这可能会改变我们永远学习编程的方式 - 或成为您的被动攻击性编码伙伴。    Rust刚刚升级（再次）    Rust不仅是“打破大脑并治愈您的灵魂的语言。” It’s now deeper in the Linux 6.10 kernel, which means the language that sounds like a fantasy RPG weapon is now writing the future of operating systems. Fun fact: If Rust gets any more traction, your next toaster might refuse to run unless it&#39;s memory-safe.   NASA&#39;s Using Python on Mars  Yes, Mars.红色的一个。因此，下次有人告诉您Python是“仅适合初学者”时，问他们他们的代码是否实际上已经进入了太空。    有趣的区域：一天的模因    宝石：git commit -m＆quot“最终最终最终固定版本”我们都知道这意味着什么。   日常的github宝石：vercel的satori   如果您要将JSX变成光滑的SVG，请查看Vercel/Satori。它快速，干净，使渲染的SVG感觉不像巫术。&lt; /p&gt;   P.S。我为像我们这样的人们建立了一个社区 如果您喜欢这种疯狂 - 突破，错误，模因，火星级别的python-我创建了一个小的（但强大的）社区：         我们每天发布2-3次，这是： 脑燃料的混合（最新工具＆amp;趋势＆p&gt;  debug disasters  debug disasters  debug disasters    poins  codion poins poins pocion 成为早期会员，并从头开始塑造它。谁知道 - 有一天，您将吹嘘自己在传播之前的加入方式。&lt; /p&gt;  如果您要调试一些灵魂刺耳的东西，找到了一个很酷的回购，或者只是想大喊半岛放置位置，请发表评论。在线程中见，开发战士。 保持怪异。保持编译。保持咖啡因。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/no/no-station4656      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbhep5/today_in_code_hq_april_30_ais_having_an/</guid>
      <pubDate>Wed, 30 Apr 2025 14:07:06 GMT</pubDate>
    </item>
    <item>
      <title>Sharding Mastodon，第1部分</title>
      <link>https://www.reddit.com/r/programming/comments/1kbgh7r/sharding_mastodon_part_1/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/levkk1       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbgh7r/sharding_mastodon_part_1/</guid>
      <pubDate>Wed, 30 Apr 2025 13:27:15 GMT</pubDate>
    </item>
    <item>
      <title>无辜的循环</title>
      <link>https://www.reddit.com/r/programming/comments/1kbg87i/the_innocent_loop/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/aijan1       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbg87i/the_innocent_loop/</guid>
      <pubDate>Wed, 30 Apr 2025 13:16:07 GMT</pubDate>
    </item>
    <item>
      <title>为什么在生产中追踪</title>
      <link>https://www.reddit.com/r/programming/comments/1kbg7dq/why_trace_in_production/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/synfo     [link]      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbg7dq/why_trace_in_production/</guid>
      <pubDate>Wed, 30 Apr 2025 13:15:08 GMT</pubDate>
    </item>
    <item>
      <title>我在Ruby上建立了MCP，以帮助开发人员将任何Rails API变成MCP服务器</title>
      <link>https://www.reddit.com/r/programming/comments/1kbedkx/i_built_mcp_on_ruby_to_help_developers_turn_any/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我在Ruby上构建了MCP，该宝石将您的Rails应用程序遵循模型上下文协议（MCP）标准，将您的Rails应用程序转化为功能齐全的LLM服务器。   是什么？ - 标准化应用程序如何与AI模型对话。   我的实施将其带到了Ruby/Rails，并使用：  OpenAi＆amp;拟人化（只需添加您的API键） 持久存储选项（内存，redis，activerecord） 动态UIS的流响应 文件处理＆amp;工具呼叫支持 只需几行代码   为什么我构建了它 我想要一种干净的，轨道友好的方式来添加AI功能，而无需为每个提供商编写样板板。现有的MCP实施是专注于Python的，因此我为Ruby社区建立了此功能。   activerecord存储（刚刚在v0.3.0中发布）使您可以将对话存储在现有的导轨数据库中。   尝试一下： https：//github.com/nagstler/mcp_on_ruby    提交由＆＃32; /u/u/nagstler      &lt;a href =“ https://www.reddit.com/r/programming/comments/1kbedkx/i_built_mcp_mcp_on_ruby_to_help_help_help_help_develpers_turn_turn_turn_any/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbedkx/i_built_mcp_on_ruby_to_help_developers_turn_any/</guid>
      <pubDate>Wed, 30 Apr 2025 11:43:50 GMT</pubDate>
    </item>
    <item>
      <title>为什么您的代码库中自动生成的技术文档更好</title>
      <link>https://www.reddit.com/r/programming/comments/1kbdqnu/why_autogenerated_technical_documentation_from/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://stackstudio.io/blog/the-death-of-the-preadme-why-why-why-why-gener-gener-technical-decumentation-from-your-your-codebase-is-is-the-future”&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbdqnu/why_autogenerated_technical_documentation_from/</guid>
      <pubDate>Wed, 30 Apr 2025 11:07:08 GMT</pubDate>
    </item>
    <item>
      <title>让V8提起：更快的JavaScript启动，带有明确的编译提示</title>
      <link>https://www.reddit.com/r/programming/comments/1kbdj9s/giving_v8_a_headsup_faster_javascript_startup/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/self       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbdj9s/giving_v8_a_headsup_faster_javascript_startup/</guid>
      <pubDate>Wed, 30 Apr 2025 10:54:50 GMT</pubDate>
    </item>
    <item>
      <title>什么是对象 /链接器 /工具链 / ...？ （汇编术语表）</title>
      <link>https://www.reddit.com/r/programming/comments/1kbcxp1/what_is_an_object_linker_toolchain_glossary_of/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tmewett      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbcxp1/what_is_an_object_linker_toolchain_glossary_of/</guid>
      <pubDate>Wed, 30 Apr 2025 10:15:44 GMT</pubDate>
    </item>
    <item>
      <title>💥技术谈话每周＃57👉氛围编码，节省成本的自动化，类型的通信，前端工具的未来，缩放Haskell应用程序，Web应用程序，在Grammarly，Async Communication，Async Communication，...</title>
      <link>https://www.reddit.com/r/programming/comments/1kbcw5k/tech_talks_weekly_57_vibe_coding_costsaving/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/techtalksweekly     ＆＃32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbcw5k/tech_talks_weekly_57_vibe_coding_costsaving/</guid>
      <pubDate>Wed, 30 Apr 2025 10:12:47 GMT</pubDate>
    </item>
    <item>
      <title>矢量化ML模型以娱乐</title>
      <link>https://www.reddit.com/r/programming/comments/1kbckil/vectorizing_ml_models_for_fun/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/foxintheredbox      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbckil/vectorizing_ml_models_for_fun/</guid>
      <pubDate>Wed, 30 Apr 2025 09:50:50 GMT</pubDate>
    </item>
    </channel>
</rss>