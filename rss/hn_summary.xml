<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Mon, 14 Oct 2024 05:54:58 GMT</lastBuildDate>
    <item>
      <title>[媒体] Valve 更新了 Steam 结账流程，明确指出购买数字产品 [...]</title>
      <link>https://t.me/hn_summary/112421</link>
      <description><![CDATA[Steam 购买现在明确表明您只是获得了许可证而不是所有权
Valve 已更新 Steam 结帐流程，以澄清购买数字产品授予的是许可证，而不是所有权，这与 Steam 订阅者协议一致。这一变化可能是由加州 AB 2426 反误导性广告法促成的，旨在确保数字交易的透明度。该法律要求明确传达数字购买并不授予所有权。GOG 在社交媒体上作出回应，重点介绍了他们的离线安装程序，尽管他们也出售许可证。此更新强调了一个更广泛的问题：数字和物理媒体通常都涉及许可，而不是所有权。争议在于消费者对数字所有权的误解，社交媒体的错误信息加剧了这种误解。]]></description>
      <guid>https://t.me/hn_summary/112421</guid>
      <pubDate>Mon, 14 Oct 2024 05:54:58 GMT</pubDate>
    </item>
    <item>
      <title>Monado 是一个开源 XR 运行时，旨在提供身临其境的 VR 和 AR 体验 [...]</title>
      <link>https://t.me/hn_summary/112420</link>
      <description><![CDATA[Monado：适用于移动设备、PC/台式机 VR 和 AR 的开源 XR 运行时
Monado 是一个开源 XR 运行时，旨在为移动设备、PC/台式机和其他设备提供身临其境的 VR 和 AR 体验。它旨在成为 Khronos OpenXR API 的全面实现，目前专注于 GNU/Linux，并计划扩展到 Windows。Monado 支持各种图形应用程序，包括 Vulkan 和 OpenGL，并为本地、舞台和动作空间关系提供全面支持。它具有强大的驱动程序框架，可轻松集成现有驱动程序，并支持具有开源驱动程序的多个 XR 设备。值得注意的是，Monado 提供实验性的 6DoF 跟踪，并利用 OpenHMD 社区的开源驱动程序提供更广泛的 HMD 支持。该项目使开发人员能够创建 OpenXR 应用程序，并能够调试和检查整个 XR 软件堆栈。其独特之处在于它透明地处理直接模式和失真校正，从而简化了开发。Monado 对开源原则的承诺体现在其协作方式、邀请贡献和培养社区驱动的开发环境中。]]></description>
      <guid>https://t.me/hn_summary/112420</guid>
      <pubDate>Mon, 14 Oct 2024 05:09:41 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在本文中，我们深入探讨了 C++ 中字符串转换从 C++17 到 [...] 的演变。</title>
      <link>https://t.me/hn_summary/112419</link>
      <description><![CDATA[C++ 字符串转换：探索 C++17 到 C++26 中的 std:from_chars
在本文中，我们深入研究了 C++ 中字符串转换从 C++17 到 C++26 的演变，重点介绍了 std::from_chars 的引入。此 API 是  标头的一部分，它为 atoi 和 stringstream 等旧方法提供了一种高性能、低级替代方案。主要功能包括非抛出行为、无内存分配和增强的错误报告。虽然 std::from_chars 可能不是最用户友好的，但它为构建更复杂的实用程序提供了基础。值得注意的是，基准测试表明，它在不同的编译器上的表现明显优于旧方法。C++23 中的更新引入了 constexpr 支持，进一步增强了它的实用性。本文强调了 API 作为原语的作用，旨在构建更复杂的工具，而不是直接使用。（基于 70% 的故事文本的总结。）]]></description>
      <guid>https://t.me/hn_summary/112419</guid>
      <pubDate>Mon, 14 Oct 2024 05:08:35 GMT</pubDate>
    </item>
    <item>
      <title>在 til.secretgeek.net 网站上，作者分享了一个直接编辑网页的巧妙技巧 [...]</title>
      <link>https://t.me/hn_summary/112418</link>
      <description><![CDATA[使用设计模式进行类似 Word 的 HTML 内联编辑
在 til.secretgeek.net 网站上，作者分享了一个巧妙的技巧，可使用 Google Chrome 的设计模式直接在浏览器中编辑网页。通过控制台使用 document.designMode=&quot;on&quot;; 启用设计模式，用户可以键入和修改网页上的任何元素。此外，作者建议创建一个名为“edit”的书签，URL 为 javascript:document.body.contentEditable=&#39;true&#39;; document.designMode=&#39;on&#39;; void 0，以便快速轻松地激活此功能。这种技术令人惊讶且独特，因为它可以将任何网页转换为可编辑的文档，类似于 Word 的界面，而无需额外的软件或扩展。]]></description>
      <guid>https://t.me/hn_summary/112418</guid>
      <pubDate>Mon, 14 Oct 2024 05:08:32 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Arvados 是一个强大的开源平台，旨在管理和处理大量 [...]</title>
      <link>https://t.me/hn_summary/112417</link>
      <description><![CDATA[您可能从未听说过的用于数据分析管道的 FLOSS 平台
Arvados 是一个强大的开源平台，旨在管理和处理从 TB 到 PB 的大量数据。其架构包括两个主要组件：Keep（内容可寻址存储系统）和 Crunch（容器化工作流引擎）。Keep 通过将内容寻址与分布式存储相结合来确保高可靠性和吞吐量，从而实现灵活的数据集管理而无需不必要的重复。Crunch 通过在 Docker 容器中执行流程并在云环境中扩展计算资源来促进工作流的可重复性和数据来源。Arvados 强调安全性，提供数据保护合规性功能，包括加密和与各种身份验证系统的集成。用户可以通过 Workbench Web 应用程序、命令行或 REST API 与 Arvados 交互，并且 SDK 提供多种编程语言版本。该平台独特的数据管理和工作流执行方法使其成为寻求全面数据分析解决方案人士的不二之选。]]></description>
      <guid>https://t.me/hn_summary/112417</guid>
      <pubDate>Mon, 14 Oct 2024 04:59:26 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在探索 SetCommState 函数中的 Win32 错误时，我深入研究了一个奇怪的问题 [...]</title>
      <link>https://t.me/hn_summary/112416</link>
      <description><![CDATA[Show HN：追踪 SetCommState 中的 Win32 错误
在探索 SetCommState 函数中的 Win32 错误时，我深入研究了影响各种串行通信工具（如 pyserial、KissUART，甚至 Edge 中的 Web Serial API）的一个特殊问题。当这些工具在使用 sscom（一种紧凑而可靠的 COM 端口工具）后崩溃或挂起时，问题就出现了。初步调查表明，sscom 不是罪魁祸首，因为它使用了 ComPort-Library 并避免了 GetCommState()。相反，问题在于 SetCommState()，它递归调用自身，导致堆栈溢出。这种递归行为是意料之外的，也是有问题的。建议的解决方案是修改 SetCommState 以防止递归，在 Microsoft 解决该错误之前提供临时解决方法。这里令人惊讶的元素是 SetCommState() 的递归性质，这对于此类函数来说并不常见。]]></description>
      <guid>https://t.me/hn_summary/112416</guid>
      <pubDate>Mon, 14 Oct 2024 04:27:13 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在不断发展的 CSS 世界中，@scope 规则的引入提供了简化的 [...]</title>
      <link>https://t.me/hn_summary/112415</link>
      <description><![CDATA[CSS 的内联作用域
在不断发展的 CSS 世界中，@scope 规则的引入提供了一种简化的样式方法，允许将 CSS 直接附加到 HTML 元素，仅将样式应用于其子元素。传统上，CSS 类用于设置元素的样式，当 CSS 和 HTML 不紧密对齐时，通常会导致冗余或“死”代码。新的 @scope 方法通过将样式嵌入 HTML 中来简化此过程，确保它们仅影响预期部分。这种方法不仅减少了不必要的代码，还增强了可维护性。截至目前，@scope 的全球支持率为 82%，表明采用率令人鼓舞。]]></description>
      <guid>https://t.me/hn_summary/112415</guid>
      <pubDate>Mon, 14 Oct 2024 04:16:05 GMT</pubDate>
    </item>
    <item>
      <title>在这篇博文中，我们深入探讨了 Rama 的功能，这是一个旨在处理后端的平台 [...]</title>
      <link>https://t.me/hn_summary/112414</link>
      <description><![CDATA[Rama 的 Clojure 术语和延续传递风格的魔力
在这篇博文中，我们深入探讨了 Rama 的功能，这是一个旨在使用类似于 UNIX 哲学的简单、可组合的构建块来处理任何规模的后端计算和存储的平台。Rama 的核心是其数据流语言，这是一个以延续传递风格 (CPS) 运行的 Clojure 库。这种方法通过消除嵌套回调来实现简洁的代码，并为并行和异步编程提供了新的范例。Rama 的操作可以多次异步发出，也可以根本不发出，从而提供了极大的灵活性。与 Clojure CPS 不同，Rama 直接编译为字节码，从而确保了高性能。这篇文章提供了代码示例来说明 Rama 的语法和功能，强调了它与 Clojure 中的传统 CPS 相比的效率和表现力。Rama 的独特之处在于它的隐式延续，它允许进行优化以防止堆栈溢出，这是显式 CPS 的常见问题。（基于 34% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/112414</guid>
      <pubDate>Mon, 14 Oct 2024 04:13:01 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在《我们需要文艺复兴时期的人》一书中，维克多·戴维斯·汉森反思了文艺复兴时期的人的生活[...]</title>
      <link>https://t.me/hn_summary/112413</link>
      <description><![CDATA[我们需要文艺复兴时期的人
在《我们需要文艺复兴时期的人》一书中，维克多·戴维斯·汉森回顾了文艺复兴时期的典型人物克里斯·克里斯托弗森的一生和遗产，并论证了这种多面手在当今专业化世界中的价值。汉森强调了亚里士多德、列奥纳多达芬奇和本杰明富兰克林等历史人物，他们在各个学科都表现出色，用他们的多种才能丰富了社会。他将这种现象与现代过度专业化趋势进行了对比，他认为这种趋势扼杀了创新和适应性。汉森有争议地指出，尽管埃隆马斯克这样的人物具有两极分化的性质，但他们通过挑战规范和推动多个领域的发展，体现了文艺复兴精神。他警告社会不要被狭隘的专业知识所主导，而是提倡欣赏那些弥合学科间差距、促进文化和技术进步的博学者。]]></description>
      <guid>https://t.me/hn_summary/112413</guid>
      <pubDate>Mon, 14 Oct 2024 04:12:57 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 电子艺界 (EA) 通过利用 AWS 服务彻底改变了其游戏修补流程 [...]</title>
      <link>https://t.me/hn_summary/112412</link>
      <description><![CDATA[Electronic Arts 利用 AWS 简化游戏修补
Electronic Arts (EA) 通过利用 AWS 服务（尤其是 Amazon Elastic Kubernetes Service (EKS) 和 Amazon Elastic File System (EFS)）彻底改变了其游戏修补流程。以前，EA 的修补流程效率低下，需要玩家下载大文件，导致安装时间延长。新的已知版本修补 (KVP) 系统于 2023 年 8 月实施，将补丁计算转移到 EA 的服务器，显著减少了高达 80% 的补丁大小和高达 3.6 倍的下载时间。这种服务器端方法使用基于 Kubernetes 的并行解决方案，在最大限度地降低成本的同时优化了性能和可扩展性。EA 对 AWS 服务的创新使用不仅增强了玩家体验，还简化了游戏开发周期。 EKS 与 EFS 的巧妙整合使 EA 能够高效管理资源并提高吞吐量，从而提供更快、更具成本效益的修补解决方案。]]></description>
      <guid>https://t.me/hn_summary/112412</guid>
      <pubDate>Mon, 14 Oct 2024 04:09:52 GMT</pubDate>
    </item>
    </channel>
</rss>